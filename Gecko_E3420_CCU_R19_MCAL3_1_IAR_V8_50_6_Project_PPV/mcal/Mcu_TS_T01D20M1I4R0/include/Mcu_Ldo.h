/** *****************************************************************************************************
 * SEMIDRIVE Copyright Statement                                                                        *
 * Copyright (c) SEMIDRIVE. All rights reserved                                                         *
 *                                                                                                      *
 * This software and all rights therein are owned by SEMIDRIVE, and are                                 *
 * protected by copyright law and other relevant laws, regulations and                                  *
 * protection. Without SEMIDRIVE's prior written consent and/or related rights,                         *
 * please do not use this software or any potion thereof in any form or by any                          *
 * means. You may not reproduce, modify or distribute this software except in                           *
 * compliance with the License. Unless required by applicable law or agreed to                          *
 * in writing, software distributed under the License is distributed on                                 *
 * an 'AS IS' basis, WITHOUT WARRANTIES OF ANY KIND, either express or implied.                         *
 *                                                                                                      *
 *******************************************************************************************************/
/** *****************************************************************************************************
 *  \file     Mcu_Ldo.h                                                                                 *
 *  \brief    This file contains interface header for MCU MCAL driver, ...                              *
 *                                                                                                      *
 * <table>                                                                                              *
 * <tr><th>Date           <th>Version                                                                   *
 * <tr><td>2023/08/02     <td>1.0.0                                                                     *
 * </table>                                                                                             *
 *******************************************************************************************************/

#ifndef MCU_LDO_H
#define MCU_LDO_H

#ifdef __cplusplus
extern "C" {
#endif
/********************************************************************************************************
 *                                      Include header files                                            *
 *******************************************************************************************************/
#include "Std_Types.h"
#include "Platform_Types.h"
/********************************************************************************************************
 *                                 Global Macro definition                                              *
 *******************************************************************************************************/
/*LDO REG DEFINE*/
/* Generated by tool. Do not modify manually. */

#define LDO_STAT_REG_OFF    0x0U

#define BO_LDO_STAT_REG_PREADY  (0U)

#define BM_LDO_STAT_REG_PREADY  ((uint32)0x01U << 0U)

#define LDO_SELFTEST_MODE_OFF   0x4U

#define BO_LDO_SELFTEST_MODE_EN (0U)

#define BM_LDO_SELFTEST_MODE_EN ((uint32)0x01U << 0U)

#define LDO_HP_MODE_CFG_OFF 0x8U

#define BO_LDO_HP_MODE_CFG_VOLT_SEL (16U)

#define FM_LDO_HP_MODE_CFG_VOLT_SEL ((uint32)0xffU << 16U)
#define FV_LDO_HP_MODE_CFG_VOLT_SEL(v) \
    (((uint32)(v) << 16U) & FM_LDO_HP_MODE_CFG_VOLT_SEL)
#define GFV_LDO_HP_MODE_CFG_VOLT_SEL(v) \
    (((uint32)(v) & FM_LDO_HP_MODE_CFG_VOLT_SEL) >> 16U)

#define BO_LDO_HP_MODE_CFG_OV_THRE  (8U)

#define FM_LDO_HP_MODE_CFG_OV_THRE  ((uint32)0xfU << 8U)
#define FV_LDO_HP_MODE_CFG_OV_THRE(v) \
    (((uint32)(v) << 8U) & FM_LDO_HP_MODE_CFG_OV_THRE)
#define GFV_LDO_HP_MODE_CFG_OV_THRE(v) \
    (((uint32)(v) & FM_LDO_HP_MODE_CFG_OV_THRE) >> 8U)

#define BO_LDO_HP_MODE_CFG_UV_THRE  (4U)

#define FM_LDO_HP_MODE_CFG_UV_THRE  ((uint32)0xfU << 4U)
#define FV_LDO_HP_MODE_CFG_UV_THRE(v) \
    (((uint32)(v) << 4U) & FM_LDO_HP_MODE_CFG_UV_THRE)
#define GFV_LDO_HP_MODE_CFG_UV_THRE(v) \
    (((uint32)(v) & FM_LDO_HP_MODE_CFG_UV_THRE) >> 4U)

#define BO_LDO_HP_MODE_CFG_OC_THRE  (0U)

#define FM_LDO_HP_MODE_CFG_OC_THRE  ((uint32)0xfU << 0U)
#define FV_LDO_HP_MODE_CFG_OC_THRE(v) \
    (((uint32)(v) << 0U) & FM_LDO_HP_MODE_CFG_OC_THRE)
#define GFV_LDO_HP_MODE_CFG_OC_THRE(v) \
    (((uint32)(v) & FM_LDO_HP_MODE_CFG_OC_THRE) >> 0U)

#define LDO_LP_MODE_CFG_OFF 0xcU

#define BO_LDO_LP_MODE_CFG_VOLT_SEL (16U)

#define FM_LDO_LP_MODE_CFG_VOLT_SEL ((uint32)0xffU << 16U)
#define FV_LDO_LP_MODE_CFG_VOLT_SEL(v) \
    (((uint32)(v) << 16U) & FM_LDO_LP_MODE_CFG_VOLT_SEL)
#define GFV_LDO_LP_MODE_CFG_VOLT_SEL(v) \
    (((uint32)(v) & FM_LDO_LP_MODE_CFG_VOLT_SEL) >> 16U)

#define BO_LDO_LP_MODE_CFG_OV_THRE  (8U)

#define FM_LDO_LP_MODE_CFG_OV_THRE  ((uint32)0xfU << 8U)
#define FV_LDO_LP_MODE_CFG_OV_THRE(v) \
    (((uint32)(v) << 8U) & FM_LDO_LP_MODE_CFG_OV_THRE)
#define GFV_LDO_LP_MODE_CFG_OV_THRE(v) \
    (((uint32)(v) & FM_LDO_LP_MODE_CFG_OV_THRE) >> 8U)

#define BO_LDO_LP_MODE_CFG_UV_THRE  (4U)

#define FM_LDO_LP_MODE_CFG_UV_THRE  ((uint32)0xfU << 4U)
#define FV_LDO_LP_MODE_CFG_UV_THRE(v) \
    (((uint32)(v) << 4U) & FM_LDO_LP_MODE_CFG_UV_THRE)
#define GFV_LDO_LP_MODE_CFG_UV_THRE(v) \
    (((uint32)(v) & FM_LDO_LP_MODE_CFG_UV_THRE) >> 4U)

#define BO_LDO_LP_MODE_CFG_OC_THRE  (0U)

#define FM_LDO_LP_MODE_CFG_OC_THRE  ((uint32)0xfU << 0U)
#define FV_LDO_LP_MODE_CFG_OC_THRE(v) \
    (((uint32)(v) << 0U) & FM_LDO_LP_MODE_CFG_OC_THRE)
#define GFV_LDO_LP_MODE_CFG_OC_THRE(v) \
    (((uint32)(v) & FM_LDO_LP_MODE_CFG_OC_THRE) >> 0U)

#define LDO_THRE_SEL_OFF    0x10U

#define BO_LDO_THRE_SEL_LDOA_EN_BLEED   (2U)

#define BM_LDO_THRE_SEL_LDOA_EN_BLEED   ((uint32)0x01U << 2U)

#define BO_LDO_THRE_SEL_LDO_MODE    (1U)

#define BM_LDO_THRE_SEL_LDO_MODE    ((uint32)0x01U << 1U)

#define BO_LDO_THRE_SEL_EN  (0U)

#define BM_LDO_THRE_SEL_EN  ((uint32)0x01U << 0U)

#define LDO_REG_TRIM_OFF    0x14U

#define BO_LDO_REG_TRIM_SEL_1P8 (4U)

#define FM_LDO_REG_TRIM_SEL_1P8 ((uint32)0x7U << 4U)
#define FV_LDO_REG_TRIM_SEL_1P8(v) \
    (((uint32)(v) << 4U) & FM_LDO_REG_TRIM_SEL_1P8)
#define GFV_LDO_REG_TRIM_SEL_1P8(v) \
    (((uint32)(v) & FM_LDO_REG_TRIM_SEL_1P8) >> 4U)

#define BO_LDO_REG_TRIM_SEL_0P8 (1U)

#define FM_LDO_REG_TRIM_SEL_0P8 ((uint32)0x7U << 1U)
#define FV_LDO_REG_TRIM_SEL_0P8(v) \
    (((uint32)(v) << 1U) & FM_LDO_REG_TRIM_SEL_0P8)
#define GFV_LDO_REG_TRIM_SEL_0P8(v) \
    (((uint32)(v) & FM_LDO_REG_TRIM_SEL_0P8) >> 1U)

#define BO_LDO_REG_TRIM_EN  (0U)

#define BM_LDO_REG_TRIM_EN  ((uint32)0x01U << 0U)

#define LDO_FUNC_STAT_OFF   0x18U

#define BO_LDO_FUNC_STAT_OV_ERR (6U)

#define BM_LDO_FUNC_STAT_OV_ERR ((uint32)0x01U << 6U)

#define BO_LDO_FUNC_STAT_OV_WARN    (5U)

#define BM_LDO_FUNC_STAT_OV_WARN    ((uint32)0x01U << 5U)

#define BO_LDO_FUNC_STAT_UV_ERR (4U)

#define BM_LDO_FUNC_STAT_UV_ERR ((uint32)0x01U << 4U)

#define BO_LDO_FUNC_STAT_UV_WARN    (3U)

#define BM_LDO_FUNC_STAT_UV_WARN    ((uint32)0x01U << 3U)

#define BO_LDO_FUNC_STAT_OC_ERR (2U)

#define BM_LDO_FUNC_STAT_OC_ERR ((uint32)0x01U << 2U)

#define BO_LDO_FUNC_STAT_OUT_RANG   (1U)

#define BM_LDO_FUNC_STAT_OUT_RANG   ((uint32)0x01U << 1U)

#define BO_LDO_FUNC_STAT_STARTUP_ERR    (0U)

#define BM_LDO_FUNC_STAT_STARTUP_ERR    ((uint32)0x01U << 0U)

#define LDO_FUNC_STAT_EN_OFF    0x1cU

#define BO_LDO_FUNC_STAT_EN_OV_ERR  (6U)

#define BM_LDO_FUNC_STAT_EN_OV_ERR  ((uint32)0x01U << 6U)

#define BO_LDO_FUNC_STAT_EN_OV_WARN (5U)

#define BM_LDO_FUNC_STAT_EN_OV_WARN ((uint32)0x01U << 5U)

#define BO_LDO_FUNC_STAT_EN_UV_ERR  (4U)

#define BM_LDO_FUNC_STAT_EN_UV_ERR  ((uint32)0x01U << 4U)

#define BO_LDO_FUNC_STAT_EN_UV_WARN (3U)

#define BM_LDO_FUNC_STAT_EN_UV_WARN ((uint32)0x01U << 3U)

#define BO_LDO_FUNC_STAT_EN_OC_ERR  (2U)

#define BM_LDO_FUNC_STAT_EN_OC_ERR  ((uint32)0x01U << 2U)

#define BO_LDO_FUNC_STAT_EN_OUT_RANG    (1U)

#define BM_LDO_FUNC_STAT_EN_OUT_RANG    ((uint32)0x01U << 1U)

#define BO_LDO_FUNC_STAT_EN_STARTUP_ERR (0U)

#define BM_LDO_FUNC_STAT_EN_STARTUP_ERR ((uint32)0x01U << 0U)

#define LDO_FUNC_INT_SIG_EN_OFF 0x20U

#define BO_LDO_FUNC_INT_SIG_EN_OV_ERR   (6U)

#define BM_LDO_FUNC_INT_SIG_EN_OV_ERR   ((uint32)0x01U << 6U)

#define BO_LDO_FUNC_INT_SIG_EN_OV_WARN  (5U)

#define BM_LDO_FUNC_INT_SIG_EN_OV_WARN  ((uint32)0x01U << 5U)

#define BO_LDO_FUNC_INT_SIG_EN_UV_ERR   (4U)

#define BM_LDO_FUNC_INT_SIG_EN_UV_ERR   ((uint32)0x01U << 4U)

#define BO_LDO_FUNC_INT_SIG_EN_UV_WARN  (3U)

#define BM_LDO_FUNC_INT_SIG_EN_UV_WARN  ((uint32)0x01U << 3U)

#define BO_LDO_FUNC_INT_SIG_EN_OC_ERR   (2U)

#define BM_LDO_FUNC_INT_SIG_EN_OC_ERR   ((uint32)0x01U << 2U)

#define BO_LDO_FUNC_INT_SIG_EN_OUT_RANG (1U)

#define BM_LDO_FUNC_INT_SIG_EN_OUT_RANG ((uint32)0x01U << 1U)

#define BO_LDO_FUNC_INT_SIG_EN_STARTUP_ERR  (0U)

#define BM_LDO_FUNC_INT_SIG_EN_STARTUP_ERR  ((uint32)0x01U << 0U)

#define LDO_FUNC_COR_SIG_EN_OFF 0x24U

#define BO_LDO_FUNC_COR_SIG_EN_OV_ERR   (6U)

#define BM_LDO_FUNC_COR_SIG_EN_OV_ERR   ((uint32)0x01U << 6U)

#define BO_LDO_FUNC_COR_SIG_EN_OV_WARN  (5U)

#define BM_LDO_FUNC_COR_SIG_EN_OV_WARN  ((uint32)0x01U << 5U)

#define BO_LDO_FUNC_COR_SIG_EN_UV_ERR   (4U)

#define BM_LDO_FUNC_COR_SIG_EN_UV_ERR   ((uint32)0x01U << 4U)

#define BO_LDO_FUNC_COR_SIG_EN_UV_WARN  (3U)

#define BM_LDO_FUNC_COR_SIG_EN_UV_WARN  ((uint32)0x01U << 3U)

#define BO_LDO_FUNC_COR_SIG_EN_OC_ERR   (2U)

#define BM_LDO_FUNC_COR_SIG_EN_OC_ERR   ((uint32)0x01U << 2U)

#define BO_LDO_FUNC_COR_SIG_EN_OUT_RANG (1U)

#define BM_LDO_FUNC_COR_SIG_EN_OUT_RANG ((uint32)0x01U << 1U)

#define BO_LDO_FUNC_COR_SIG_EN_STARTUP_ERR  (0U)

#define BM_LDO_FUNC_COR_SIG_EN_STARTUP_ERR  ((uint32)0x01U << 0U)

#define LDO_FUNC_UNC_SIG_EN_OFF 0x28U

#define BO_LDO_FUNC_UNC_SIG_EN_OV_ERR   (6U)

#define BM_LDO_FUNC_UNC_SIG_EN_OV_ERR   ((uint32)0x01U << 6U)

#define BO_LDO_FUNC_UNC_SIG_EN_OV_WARN  (5U)

#define BM_LDO_FUNC_UNC_SIG_EN_OV_WARN  ((uint32)0x01U << 5U)

#define BO_LDO_FUNC_UNC_SIG_EN_UV_ERR   (4U)

#define BM_LDO_FUNC_UNC_SIG_EN_UV_ERR   ((uint32)0x01U << 4U)

#define BO_LDO_FUNC_UNC_SIG_EN_UV_WARN  (3U)

#define BM_LDO_FUNC_UNC_SIG_EN_UV_WARN  ((uint32)0x01U << 3U)

#define BO_LDO_FUNC_UNC_SIG_EN_OC_ERR   (2U)

#define BM_LDO_FUNC_UNC_SIG_EN_OC_ERR   ((uint32)0x01U << 2U)

#define BO_LDO_FUNC_UNC_SIG_EN_OUT_RANG (1U)

#define BM_LDO_FUNC_UNC_SIG_EN_OUT_RANG ((uint32)0x01U << 1U)

#define BO_LDO_FUNC_UNC_SIG_EN_STARTUP_ERR  (0U)

#define BM_LDO_FUNC_UNC_SIG_EN_STARTUP_ERR  ((uint32)0x01U << 0U)

#define LDO_FUNC_STAT_CLR_OFF   0x2cU

#define BO_LDO_FUNC_STAT_CLR_OV_ERR (6U)

#define BM_LDO_FUNC_STAT_CLR_OV_ERR ((uint32)0x01U << 6U)

#define BO_LDO_FUNC_STAT_CLR_OV_WARN    (5U)

#define BM_LDO_FUNC_STAT_CLR_OV_WARN    ((uint32)0x01U << 5U)

#define BO_LDO_FUNC_STAT_CLR_UV_ERR (4U)

#define BM_LDO_FUNC_STAT_CLR_UV_ERR ((uint32)0x01U << 4U)

#define BO_LDO_FUNC_STAT_CLR_UV_WARN    (3U)

#define BM_LDO_FUNC_STAT_CLR_UV_WARN    ((uint32)0x01U << 3U)

#define BO_LDO_FUNC_STAT_CLR_OC_ERR (2U)

#define BM_LDO_FUNC_STAT_CLR_OC_ERR ((uint32)0x01U << 2U)

#define BO_LDO_FUNC_STAT_CLR_OUT_RANG   (1U)

#define BM_LDO_FUNC_STAT_CLR_OUT_RANG   ((uint32)0x01U << 1U)

#define BO_LDO_FUNC_STAT_CLR_STARTUP_ERR    (0U)

#define BM_LDO_FUNC_STAT_CLR_STARTUP_ERR    ((uint32)0x01U << 0U)

#define LDO_FUNC_DY_STAT_OFF    0x30U

#define BO_LDO_FUNC_DY_STAT_OV_ERR  (6U)

#define BM_LDO_FUNC_DY_STAT_OV_ERR  ((uint32)0x01U << 6U)

#define BO_LDO_FUNC_DY_STAT_OV_WARN (5U)

#define BM_LDO_FUNC_DY_STAT_OV_WARN ((uint32)0x01U << 5U)

#define BO_LDO_FUNC_DY_STAT_UV_ERR  (4U)

#define BM_LDO_FUNC_DY_STAT_UV_ERR  ((uint32)0x01U << 4U)

#define BO_LDO_FUNC_DY_STAT_UV_WARN (3U)

#define BM_LDO_FUNC_DY_STAT_UV_WARN ((uint32)0x01U << 3U)

#define BO_LDO_FUNC_DY_STAT_OC_ERR  (2U)

#define BM_LDO_FUNC_DY_STAT_OC_ERR  ((uint32)0x01U << 2U)

#define BO_LDO_FUNC_DY_STAT_OUT_RANG    (1U)

#define BM_LDO_FUNC_DY_STAT_OUT_RANG    ((uint32)0x01U << 1U)

#define BO_LDO_FUNC_DY_STAT_STARTUP_ERR (0U)

#define BM_LDO_FUNC_DY_STAT_STARTUP_ERR ((uint32)0x01U << 0U)

#define LDO_INPUT_STAT_OFF  0x34U

#define BO_LDO_INPUT_STAT_HLP_MODE_ERR  (2U)

#define BM_LDO_INPUT_STAT_HLP_MODE_ERR  ((uint32)0x01U << 2U)

#define BO_LDO_INPUT_STAT_SELFTEST_MODE_ERR (1U)

#define BM_LDO_INPUT_STAT_SELFTEST_MODE_ERR ((uint32)0x01U << 1U)

#define BO_LDO_INPUT_STAT_REG_PARITY_EJ_ERR (0U)

#define BM_LDO_INPUT_STAT_REG_PARITY_EJ_ERR ((uint32)0x01U << 0U)

#define LDO_INPUT_STAT_EN_OFF   0x38U

#define BO_LDO_INPUT_STAT_EN_HLP_MODE_ERR   (2U)

#define BM_LDO_INPUT_STAT_EN_HLP_MODE_ERR   ((uint32)0x01U << 2U)

#define BO_LDO_INPUT_STAT_EN_SELFTEST_MODE_ERR  (1U)

#define BM_LDO_INPUT_STAT_EN_SELFTEST_MODE_ERR  ((uint32)0x01U << 1U)

#define BO_LDO_INPUT_STAT_EN_REG_PARITY_EJ_ERR  (0U)

#define BM_LDO_INPUT_STAT_EN_REG_PARITY_EJ_ERR  ((uint32)0x01U << 0U)

#define LDO_INPUT_INT_SIG_EN_OFF    0x3cU

#define BO_LDO_INPUT_INT_SIG_EN_HLP_MODE_ERR    (2U)

#define BM_LDO_INPUT_INT_SIG_EN_HLP_MODE_ERR    ((uint32)0x01U << 2U)

#define BO_LDO_INPUT_INT_SIG_EN_SELFTEST_MODE_ERR   (1U)

#define BM_LDO_INPUT_INT_SIG_EN_SELFTEST_MODE_ERR   ((uint32)0x01U << 1U)

#define BO_LDO_INPUT_INT_SIG_EN_REG_PARITY_EJ_ERR   (0U)

#define BM_LDO_INPUT_INT_SIG_EN_REG_PARITY_EJ_ERR   ((uint32)0x01U << 0U)

#define LDO_COR_ERR_INT_STAT_OFF    0x40U

#define BO_LDO_COR_ERR_INT_STAT_PWDATA_COR_ERR  (0U)

#define BM_LDO_COR_ERR_INT_STAT_PWDATA_COR_ERR  ((uint32)0x01U << 0U)

#define LDO_COR_ERR_INT_STAT_EN_OFF 0x44U

#define BO_LDO_COR_ERR_INT_STAT_EN_PWDATA_COR_ERR   (0U)

#define BM_LDO_COR_ERR_INT_STAT_EN_PWDATA_COR_ERR   ((uint32)0x01U << 0U)

#define LDO_COR_ERR_INT_SIG_EN_OFF  0x48U

#define BO_LDO_COR_ERR_INT_SIG_EN_PWDATA_COR_ERR    (0U)

#define BM_LDO_COR_ERR_INT_SIG_EN_PWDATA_COR_ERR    ((uint32)0x01U << 0U)

#define LDO_UNC_ERR_INT_STAT_OFF    0x4cU

#define BO_LDO_UNC_ERR_INT_STAT_PCTL_UNC_ERR    (3U)

#define BM_LDO_UNC_ERR_INT_STAT_PCTL_UNC_ERR    ((uint32)0x01U << 3U)

#define BO_LDO_UNC_ERR_INT_STAT_PADDR_UNC_ERR   (2U)

#define BM_LDO_UNC_ERR_INT_STAT_PADDR_UNC_ERR   ((uint32)0x01U << 2U)

#define BO_LDO_UNC_ERR_INT_STAT_PWDATA_FATAL_ERR    (1U)

#define BM_LDO_UNC_ERR_INT_STAT_PWDATA_FATAL_ERR    ((uint32)0x01U << 1U)

#define BO_LDO_UNC_ERR_INT_STAT_PWDATA_UNC_ERR  (0U)

#define BM_LDO_UNC_ERR_INT_STAT_PWDATA_UNC_ERR  ((uint32)0x01U << 0U)

#define LDO_UNC_ERR_INT_STAT_EN_OFF 0x50U

#define BO_LDO_UNC_ERR_INT_STAT_EN_PCTL_UNC_ERR (3U)

#define BM_LDO_UNC_ERR_INT_STAT_EN_PCTL_UNC_ERR ((uint32)0x01U << 3U)

#define BO_LDO_UNC_ERR_INT_STAT_EN_PADDR_UNC_ERR    (2U)

#define BM_LDO_UNC_ERR_INT_STAT_EN_PADDR_UNC_ERR    ((uint32)0x01U << 2U)

#define BO_LDO_UNC_ERR_INT_STAT_EN_PWDATA_FATAL_ERR (1U)

#define BM_LDO_UNC_ERR_INT_STAT_EN_PWDATA_FATAL_ERR ((uint32)0x01U << 1U)

#define BO_LDO_UNC_ERR_INT_STAT_EN_PWDATA_UNC_ERR   (0U)

#define BM_LDO_UNC_ERR_INT_STAT_EN_PWDATA_UNC_ERR   ((uint32)0x01U << 0U)

#define LDO_UNC_ERR_INT_SIG_EN_OFF  0x54U

#define BO_LDO_UNC_ERR_INT_SIG_EN_PCTL_UNC_ERR  (3U)

#define BM_LDO_UNC_ERR_INT_SIG_EN_PCTL_UNC_ERR  ((uint32)0x01U << 3U)

#define BO_LDO_UNC_ERR_INT_SIG_EN_PADDR_UNC_ERR (2U)

#define BM_LDO_UNC_ERR_INT_SIG_EN_PADDR_UNC_ERR ((uint32)0x01U << 2U)

#define BO_LDO_UNC_ERR_INT_SIG_EN_PWDATA_FATAL_ERR  (1U)

#define BM_LDO_UNC_ERR_INT_SIG_EN_PWDATA_FATAL_ERR  ((uint32)0x01U << 1U)

#define BO_LDO_UNC_ERR_INT_SIG_EN_PWDATA_UNC_ERR    (0U)

#define BM_LDO_UNC_ERR_INT_SIG_EN_PWDATA_UNC_ERR    ((uint32)0x01U << 0U)

#define LDO_REG_PARITY_ERR_INT_STAT_OFF 0x58U

#define BO_LDO_REG_PARITY_ERR_INT_STAT_REG_PARITY_ERR   (0U)

#define BM_LDO_REG_PARITY_ERR_INT_STAT_REG_PARITY_ERR   ((uint32)0x01U << 0U)

#define LDO_REG_PARITY_ERR_INT_STAT_EN_OFF  0x5cU

#define BO_LDO_REG_PARITY_ERR_INT_STAT_EN_REG_PARITY_ERR    (0U)

#define BM_LDO_REG_PARITY_ERR_INT_STAT_EN_REG_PARITY_ERR    ((uint32)0x01U << 0U)

#define LDO_REG_PARITY_ERR_INT_SIG_EN_OFF   0x60U

#define BO_LDO_REG_PARITY_ERR_INT_SIG_EN_REG_PARITY_ERR (0U)

#define BM_LDO_REG_PARITY_ERR_INT_SIG_EN_REG_PARITY_ERR ((uint32)0x01U << 0U)

#define LDO_PRDATAINJ_OFF   0x64U

#define BO_LDO_PRDATAINJ_ERR_INJ    (0U)

#define BM_LDO_PRDATAINJ_ERR_INJ    ((uint32)0x01U << 0U)

#define LDO_PWDATA_INJ_OFF  0x68U

#define BO_LDO_PWDATA_INJ_DATA_INJ  (0U)

#define FM_LDO_PWDATA_INJ_DATA_INJ  ((uint32)0xffffffffU << 0U)
#define FV_LDO_PWDATA_INJ_DATA_INJ(v) \
    (((uint32)(v) << 0U) & FM_LDO_PWDATA_INJ_DATA_INJ)
#define GFV_LDO_PWDATA_INJ_DATA_INJ(v) \
    (((uint32)(v) & FM_LDO_PWDATA_INJ_DATA_INJ) >> 0U)

#define LDO_PWECC_INJ_OFF   0x6cU

#define BO_LDO_PWECC_INJ_ECC_INJ    (0U)

#define FM_LDO_PWECC_INJ_ECC_INJ    ((uint32)0x7fU << 0U)
#define FV_LDO_PWECC_INJ_ECC_INJ(v) \
    (((uint32)(v) << 0U) & FM_LDO_PWECC_INJ_ECC_INJ)
#define GFV_LDO_PWECC_INJ_ECC_INJ(v) \
    (((uint32)(v) & FM_LDO_PWECC_INJ_ECC_INJ) >> 0U)

#define LDO_INT_ERR_INJ_OFF 0x70U

#define BO_LDO_INT_ERR_INJ_COR_ERR  (2U)

#define BM_LDO_INT_ERR_INJ_COR_ERR  ((uint32)0x01U << 2U)

#define BO_LDO_INT_ERR_INJ_UNC_ERR  (1U)

#define BM_LDO_INT_ERR_INJ_UNC_ERR  ((uint32)0x01U << 1U)

#define BO_LDO_INT_ERR_INJ_FUNC_ERR (0U)

#define BM_LDO_INT_ERR_INJ_FUNC_ERR ((uint32)0x01U << 0U)

#define LDO_ANA_TEST_MD_OFF 0x74U

#define BO_LDO_ANA_TEST_MD_LDO_TEST (0U)

#define FM_LDO_ANA_TEST_MD_LDO_TEST ((uint32)0x7U << 0U)
#define FV_LDO_ANA_TEST_MD_LDO_TEST(v) \
    (((uint32)(v) << 0U) & FM_LDO_ANA_TEST_MD_LDO_TEST)
#define GFV_LDO_ANA_TEST_MD_LDO_TEST(v) \
    (((uint32)(v) & FM_LDO_ANA_TEST_MD_LDO_TEST) >> 0U)


/********************************************************************************************************
 *                                  Global Types definition                                             *
 *******************************************************************************************************/

/*ldo over current threshold */
typedef enum
{
    LDO_OC_DETECT_THRESHOLD_150_MA = 0x00U,
    LDO_OC_DETECT_THRESHOLD_210_MA,
    LDO_OC_DETECT_THRESHOLD_270_MA,
    LDO_OC_DETECT_THRESHOLD_330_MA,
} Ldo_OcDetectThresholdType;

/*ldo under voltage threshold */
typedef enum
{
    LDO_UV_DETECT_THRESHOLD_10P_PERCENT = 0x00U,
    LDO_UV_DETECT_THRESHOLD_0_PERCENT,
    LDO_UV_DETECT_THRESHOLD_10N_PERCENT,
    LDO_UV_DETECT_THRESHOLD_20N_PERCENT,
} Ldo_UvDetectThresholdType;

/*ldo warnning threshold, compared with detect threshold*/
typedef enum
{
    LDO_UV_WARNNING_THRESHOLD_5P_PERCENT = 0x00U,
    LDO_UV_WARNNING_THRESHOLD_10P_PERCENT,
} Ldo_UvWarnningThresholdType;
/*ldo over voltage threshold */
typedef enum
{
    LDO_OV_DETECT_THRESHOLD_10N_PERCENT = 0x00U,
    LDO_OV_DETECT_THRESHOLD_0_PERCENT,
    LDO_OV_DETECT_THRESHOLD_10P_PERCENT,
    LDO_OV_DETECT_THRESHOLD_20P_PERCENT,
} Ldo_OvDetectThresholdType;

/*ldo warnning threshold, compared with detect threshold*/
typedef enum
{
    LDO_OV_WARNNING_THRESHOLD_5N_PERCENT = 0x00U,
    LDO_OV_WARNNING_THRESHOLD_10N_PERCENT,
} Ldo_OvWarnningThresholdType;
/*ldo over voltage threshold */

/*ldo ov uv init config type */
typedef struct
{
    /*set ldo vout*/
    uint32 vout;
    /*set oc threshold*/
    Ldo_OcDetectThresholdType ocDetectThreshold;
    /*set uv threshold*/
    Ldo_UvDetectThresholdType uvDetectThreshold;
    /*set uv warning threshold*/
    Ldo_UvWarnningThresholdType uvWarnningThreshold;
    /*set ov threshold*/
    Ldo_OvDetectThresholdType ovDetectThreshold;
    /*set ov warning threshold*/
    Ldo_OvWarnningThresholdType ovWarnningThreshold;
    /*set interrupt enable*/
    boolean intEn;
    /*set interrupt value*/
    uint32 intVal;
/*PRQA S 1535 1*/
} Ldo_OvUvCfgType;

/********************************************************************************************************
 *                                  Global Function Declarations                                        *
 *******************************************************************************************************/
#ifndef SEMIDRIVE_E3_LITE_SERIES
Std_ReturnType Mcu_Ip_LdoSetVout(uint32 mv);
#endif /** #ifndef SEMIDRIVE_E3_LITE_SERIES*/

#ifdef __cplusplus
}
#endif

#endif /* MCU_LDO_H */
/* End of file */
